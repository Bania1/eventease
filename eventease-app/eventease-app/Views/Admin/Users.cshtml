@using X.PagedList
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Core


@model X.PagedList.IPagedList<eventease_app.Models.User>
@{
    ViewData["Title"] = "Manage Users";
}

<h2 class="text-center mb-4">Manage Users</h2>

<!-- Formulario de búsqueda y filtrado -->
<form asp-action="Users" method="get" class="row g-3 mb-4">
    <div class="col-md-3">
        <input type="text" name="email" class="form-control" placeholder="Search by Email"
               value="@Context.Request.Query["email"]" />
    </div>
    <div class="col-md-3">
        <input type="date" name="registered" class="form-control"
               value="@Context.Request.Query["registered"]" />
    </div>
    <div class="col-md-2">
        <select name="role" class="form-select">
            <option value="">All Roles</option>
            <option value="admin" selected="@(Context.Request.Query["role"] == "admin")">Admin</option>
            <option value="user" selected="@(Context.Request.Query["role"] == "user")">User</option>
            <option value="organizer" selected="@(Context.Request.Query["role"] == "organizer")">Organizer</option>
        </select>
    </div>
    <div class="col-md-2">
        <select name="approved" class="form-select">
            <option value="">All Statuses</option>
            <option value="true" selected="@(Context.Request.Query["approved"] == "true")">Approved</option>
            <option value="false" selected="@(Context.Request.Query["approved"] == "false")">Pending</option>
        </select>
    </div>
    <div class="col-md-2">
        <button type="submit" class="btn btn-primary w-100">Search</button>
    </div>
</form>

<!-- Tabla de usuarios -->
<table class="table table-bordered table-striped text-center">
    <thead class="table-dark">
        <tr>
            <th>Email</th>
            <th>Role</th>
            <th>Approved</th>
            <th>Registered</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.Email</td>
                <td>@user.Role</td>
                <td>
                    @if (user.Approved)
                    {
                        <span class="badge bg-success">Approved</span>
                    }
                    else
                    {
                        <span class="badge bg-danger">Pending</span>
                    }
                </td>
                <td>@user.CreatedAt.ToString("yyyy-MM-dd")</td>
                <td>
                    <a class="btn btn-sm btn-primary" asp-action="EditUser" asp-route-id="@user.Id"><i class="bi bi-pencil-square"></i> Edit</a>
                    <a class="btn btn-sm btn-danger" asp-action="DeleteUser" asp-route-id="@user.Id"><i class="bi bi-trash"></i> Delete</a>
                    <a class="btn btn-sm btn-warning text-dark" asp-action="ResetPassword" asp-route-id="@user.Id"><i class="bi bi-key-fill"></i> Reset Password</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Paginación -->
<div class="d-flex justify-content-center mt-4">
    @Html.PagedListPager(Model, page => Url.Action("Users", new
        {
            page,
            email = Context.Request.Query["email"],
            role = Context.Request.Query["role"],
            approved = Context.Request.Query["approved"],
            registered = Context.Request.Query["registered"]
        }),
            new PagedListRenderOptions
    {
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        Display = PagedListDisplayMode.Always,
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" }
    })
</div>
