@using System.Security.Claims

@{
    // Start with a nullable userName
    string? userName = null;

    // Only compute if User and Identity exist and are authenticated
    if (User?.Identity?.IsAuthenticated == true)
    {
        // Safely grab the email claim, or fall back to Identity.Name
        var emailClaim = User.FindFirst(ClaimTypes.Email)?.Value
                         ?? User.Identity?.Name;

        if (!string.IsNullOrEmpty(emailClaim))
        {
            // Extract text before the '@'
            var atPos = emailClaim.IndexOf('@');
            userName = atPos > 0
                       ? emailClaim[..atPos]
                       : emailClaim;
        }
    }
}

<ul class="navbar-nav ms-auto">
    @if (userName != null)
    {
        <li class="nav-item d-flex align-items-center">
            <span class="nav-link">¡Hola, @userName!</span>
        </li>
        <li class="nav-item">
            <form asp-controller="Auth" asp-action="Logout" method="post" class="d-inline">
                <button type="submit" class="btn btn-link nav-link">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a asp-controller="Auth" asp-action="Login" class="nav-link">Login</a>
        </li>
        <li class="nav-item">
            <a asp-controller="Auth" asp-action="Register" class="nav-link">Register</a>
        </li>
    }
</ul>
